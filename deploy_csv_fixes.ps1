# Script PowerShell de d√©ploiement des corrections du mapping CSV
# Ce script applique toutes les corrections n√©cessaires

Write-Host "=== D√âPLOIEMENT DES CORRECTIONS CSV MAPPING ===" -ForegroundColor Green
Write-Host ""

# 1. V√©rifier que nous sommes dans le bon r√©pertoire
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis la racine du projet" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ R√©pertoire de projet d√©tect√©" -ForegroundColor Green
Write-Host ""

# 2. Construire le projet
Write-Host "üî® Construction du projet..." -ForegroundColor Yellow
npm run build

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Construction r√©ussie" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de la construction" -ForegroundColor Red
    exit 1
}

Write-Host ""

# 3. V√©rifier les fichiers modifi√©s
Write-Host "üìÅ Fichiers modifi√©s:" -ForegroundColor Cyan
Write-Host "  - src/components/CSVImporter.tsx (mapping strict)" -ForegroundColor White
Write-Host "  - src/components/ImportReportDisplay.tsx (nouveau composant)" -ForegroundColor White
Write-Host "  - parts_template.csv (template CSV)" -ForegroundColor White
Write-Host "  - Scripts SQL de diagnostic et nettoyage" -ForegroundColor White
Write-Host ""

# 4. Instructions pour l'utilisateur
Write-Host "üìã INSTRUCTIONS POUR L'UTILISATION:" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. NETTOYAGE DES DONN√âES EXISTANTES:" -ForegroundColor Yellow
Write-Host "   - Ex√©cutez le script SQL: clean_parts_table.sql" -ForegroundColor White
Write-Host "   - Ou videz manuellement la table: DELETE FROM parts;" -ForegroundColor White
Write-Host ""
Write-Host "2. IMPORT DES NOUVELLES DONN√âES:" -ForegroundColor Yellow
Write-Host "   - Utilisez le template CSV: parts_template.csv" -ForegroundColor White
Write-Host "   - Assurez-vous d'avoir exactement 23 colonnes" -ForegroundColor White
Write-Host "   - Utilisez l'interface d'import dans l'application" -ForegroundColor White
Write-Host ""
Write-Host "3. VALIDATION DES R√âSULTATS:" -ForegroundColor Yellow
Write-Host "   - Le syst√®me affichera automatiquement un rapport d'import" -ForegroundColor White
Write-Host "   - Ex√©cutez le script de test: test_csv_mapping_fix.sql" -ForegroundColor White
Write-Host ""
Write-Host "4. FONCTIONNALIT√âS AJOUT√âES:" -ForegroundColor Yellow
Write-Host "   ‚úÖ Mapping strict des colonnes par position" -ForegroundColor Green
Write-Host "   ‚úÖ D√©tection automatique des d√©limiteurs CSV" -ForegroundColor Green
Write-Host "   ‚úÖ Rapport de validation post-import" -ForegroundColor Green
Write-Host "   ‚úÖ Interface utilisateur pour les rapports" -ForegroundColor Green
Write-Host "   ‚úÖ D√©tection des valeurs suspectes" -ForegroundColor Green
Write-Host "   ‚úÖ Scripts de diagnostic et nettoyage" -ForegroundColor Green
Write-Host ""

# 5. D√©ploiement sur Netlify (si configur√©)
if (Test-Path "netlify.toml") {
    Write-Host "üöÄ D√©ploiement sur Netlify..." -ForegroundColor Yellow
    npm run deploy
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ D√©ploiement Netlify r√©ussi" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Erreur lors du d√©ploiement Netlify" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ÑπÔ∏è  Pas de configuration Netlify d√©tect√©e" -ForegroundColor Blue
}

Write-Host ""
Write-Host "=== D√âPLOIEMENT TERMIN√â ===" -ForegroundColor Green
Write-Host ""
Write-Host "üéâ Les corrections du mapping CSV sont maintenant actives!" -ForegroundColor Green
Write-Host ""
Write-Host "üìñ Pour plus d'informations, consultez: CSV_MAPPING_FIX_README.md" -ForegroundColor Cyan
